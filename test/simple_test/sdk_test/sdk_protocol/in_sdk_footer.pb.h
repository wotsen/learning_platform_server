// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: in_sdk_footer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_in_5fsdk_5ffooter_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_in_5fsdk_5ffooter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_in_5fsdk_5ffooter_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_in_5fsdk_5ffooter_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_in_5fsdk_5ffooter_2eproto;
namespace insider {
namespace sdk {
class ContentResult;
class ContentResultDefaultTypeInternal;
extern ContentResultDefaultTypeInternal _ContentResult_default_instance_;
class Footer;
class FooterDefaultTypeInternal;
extern FooterDefaultTypeInternal _Footer_default_instance_;
class Result;
class ResultDefaultTypeInternal;
extern ResultDefaultTypeInternal _Result_default_instance_;
class SdkResult;
class SdkResultDefaultTypeInternal;
extern SdkResultDefaultTypeInternal _SdkResult_default_instance_;
}  // namespace sdk
}  // namespace insider
PROTOBUF_NAMESPACE_OPEN
template<> ::insider::sdk::ContentResult* Arena::CreateMaybeMessage<::insider::sdk::ContentResult>(Arena*);
template<> ::insider::sdk::Footer* Arena::CreateMaybeMessage<::insider::sdk::Footer>(Arena*);
template<> ::insider::sdk::Result* Arena::CreateMaybeMessage<::insider::sdk::Result>(Arena*);
template<> ::insider::sdk::SdkResult* Arena::CreateMaybeMessage<::insider::sdk::SdkResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace insider {
namespace sdk {

enum ContentResultE : int {
  R_CODE_OK = 0,
  R_CODE_ERROR = 1,
  R_CODE_USER_EXIST = 2,
  R_CODE_USER_TOKEN_TIMEOUT = 3,
  R_CODE_USER_NOT_EXIST = 4,
  R_CODE_USER_IN_BLACK_LIST = 5,
  R_CODE_USER_NO_PERMISSION = 6,
  R_CODE_USER_PASS_ERROR = 7,
  R_CODE_USER_ALIVE_TIME_TOOLONG = 8,
  ContentResultE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ContentResultE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ContentResultE_IsValid(int value);
constexpr ContentResultE ContentResultE_MIN = R_CODE_OK;
constexpr ContentResultE ContentResultE_MAX = R_CODE_USER_ALIVE_TIME_TOOLONG;
constexpr int ContentResultE_ARRAYSIZE = ContentResultE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ContentResultE_descriptor();
template<typename T>
inline const std::string& ContentResultE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ContentResultE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ContentResultE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ContentResultE_descriptor(), enum_t_value);
}
inline bool ContentResultE_Parse(
    const std::string& name, ContentResultE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ContentResultE>(
    ContentResultE_descriptor(), name, value);
}
enum ResponseResult : int {
  OK = 0,
  ERROR = 1,
  ResponseResult_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ResponseResult_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ResponseResult_IsValid(int value);
constexpr ResponseResult ResponseResult_MIN = OK;
constexpr ResponseResult ResponseResult_MAX = ERROR;
constexpr int ResponseResult_ARRAYSIZE = ResponseResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResponseResult_descriptor();
template<typename T>
inline const std::string& ResponseResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ResponseResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ResponseResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ResponseResult_descriptor(), enum_t_value);
}
inline bool ResponseResult_Parse(
    const std::string& name, ResponseResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ResponseResult>(
    ResponseResult_descriptor(), name, value);
}
// ===================================================================

class SdkResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:insider.sdk.SdkResult) */ {
 public:
  SdkResult();
  virtual ~SdkResult();

  SdkResult(const SdkResult& from);
  SdkResult(SdkResult&& from) noexcept
    : SdkResult() {
    *this = ::std::move(from);
  }

  inline SdkResult& operator=(const SdkResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SdkResult& operator=(SdkResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SdkResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SdkResult* internal_default_instance() {
    return reinterpret_cast<const SdkResult*>(
               &_SdkResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SdkResult& a, SdkResult& b) {
    a.Swap(&b);
  }
  inline void Swap(SdkResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SdkResult* New() const final {
    return CreateMaybeMessage<SdkResult>(nullptr);
  }

  SdkResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SdkResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SdkResult& from);
  void MergeFrom(const SdkResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SdkResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "insider.sdk.SdkResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_in_5fsdk_5ffooter_2eproto);
    return ::descriptor_table_in_5fsdk_5ffooter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kStatusCodeFieldNumber = 1,
  };
  // string code = 2;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // .insider.sdk.ResponseResult status_code = 1;
  void clear_status_code();
  ::insider::sdk::ResponseResult status_code() const;
  void set_status_code(::insider::sdk::ResponseResult value);
  private:
  ::insider::sdk::ResponseResult _internal_status_code() const;
  void _internal_set_status_code(::insider::sdk::ResponseResult value);
  public:

  // @@protoc_insertion_point(class_scope:insider.sdk.SdkResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  int status_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_in_5fsdk_5ffooter_2eproto;
};
// -------------------------------------------------------------------

class ContentResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:insider.sdk.ContentResult) */ {
 public:
  ContentResult();
  virtual ~ContentResult();

  ContentResult(const ContentResult& from);
  ContentResult(ContentResult&& from) noexcept
    : ContentResult() {
    *this = ::std::move(from);
  }

  inline ContentResult& operator=(const ContentResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContentResult& operator=(ContentResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ContentResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContentResult* internal_default_instance() {
    return reinterpret_cast<const ContentResult*>(
               &_ContentResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ContentResult& a, ContentResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ContentResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ContentResult* New() const final {
    return CreateMaybeMessage<ContentResult>(nullptr);
  }

  ContentResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ContentResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ContentResult& from);
  void MergeFrom(const ContentResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContentResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "insider.sdk.ContentResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_in_5fsdk_5ffooter_2eproto);
    return ::descriptor_table_in_5fsdk_5ffooter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 2,
    kStatusCodeFieldNumber = 1,
  };
  // string code = 2;
  void clear_code();
  const std::string& code() const;
  void set_code(const std::string& value);
  void set_code(std::string&& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  std::string* mutable_code();
  std::string* release_code();
  void set_allocated_code(std::string* code);
  private:
  const std::string& _internal_code() const;
  void _internal_set_code(const std::string& value);
  std::string* _internal_mutable_code();
  public:

  // .insider.sdk.ContentResultE status_code = 1;
  void clear_status_code();
  ::insider::sdk::ContentResultE status_code() const;
  void set_status_code(::insider::sdk::ContentResultE value);
  private:
  ::insider::sdk::ContentResultE _internal_status_code() const;
  void _internal_set_status_code(::insider::sdk::ContentResultE value);
  public:

  // @@protoc_insertion_point(class_scope:insider.sdk.ContentResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr code_;
  int status_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_in_5fsdk_5ffooter_2eproto;
};
// -------------------------------------------------------------------

class Result :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:insider.sdk.Result) */ {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);
  Result(Result&& from) noexcept
    : Result() {
    *this = ::std::move(from);
  }

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline Result& operator=(Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Result* internal_default_instance() {
    return reinterpret_cast<const Result*>(
               &_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Result& a, Result& b) {
    a.Swap(&b);
  }
  inline void Swap(Result* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Result* New() const final {
    return CreateMaybeMessage<Result>(nullptr);
  }

  Result* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Result>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Result* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "insider.sdk.Result";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_in_5fsdk_5ffooter_2eproto);
    return ::descriptor_table_in_5fsdk_5ffooter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSdkResultFieldNumber = 1,
    kContentResultFieldNumber = 2,
  };
  // .insider.sdk.SdkResult sdk_result = 1;
  bool has_sdk_result() const;
  private:
  bool _internal_has_sdk_result() const;
  public:
  void clear_sdk_result();
  const ::insider::sdk::SdkResult& sdk_result() const;
  ::insider::sdk::SdkResult* release_sdk_result();
  ::insider::sdk::SdkResult* mutable_sdk_result();
  void set_allocated_sdk_result(::insider::sdk::SdkResult* sdk_result);
  private:
  const ::insider::sdk::SdkResult& _internal_sdk_result() const;
  ::insider::sdk::SdkResult* _internal_mutable_sdk_result();
  public:

  // .insider.sdk.ContentResult content_result = 2;
  bool has_content_result() const;
  private:
  bool _internal_has_content_result() const;
  public:
  void clear_content_result();
  const ::insider::sdk::ContentResult& content_result() const;
  ::insider::sdk::ContentResult* release_content_result();
  ::insider::sdk::ContentResult* mutable_content_result();
  void set_allocated_content_result(::insider::sdk::ContentResult* content_result);
  private:
  const ::insider::sdk::ContentResult& _internal_content_result() const;
  ::insider::sdk::ContentResult* _internal_mutable_content_result();
  public:

  // @@protoc_insertion_point(class_scope:insider.sdk.Result)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::insider::sdk::SdkResult* sdk_result_;
  ::insider::sdk::ContentResult* content_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_in_5fsdk_5ffooter_2eproto;
};
// -------------------------------------------------------------------

class Footer :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:insider.sdk.Footer) */ {
 public:
  Footer();
  virtual ~Footer();

  Footer(const Footer& from);
  Footer(Footer&& from) noexcept
    : Footer() {
    *this = ::std::move(from);
  }

  inline Footer& operator=(const Footer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Footer& operator=(Footer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Footer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Footer* internal_default_instance() {
    return reinterpret_cast<const Footer*>(
               &_Footer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Footer& a, Footer& b) {
    a.Swap(&b);
  }
  inline void Swap(Footer* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Footer* New() const final {
    return CreateMaybeMessage<Footer>(nullptr);
  }

  Footer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Footer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Footer& from);
  void MergeFrom(const Footer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Footer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "insider.sdk.Footer";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_in_5fsdk_5ffooter_2eproto);
    return ::descriptor_table_in_5fsdk_5ffooter_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 2,
    kResFieldNumber = 1,
  };
  // .insider.sdk.Result result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::insider::sdk::Result& result() const;
  ::insider::sdk::Result* release_result();
  ::insider::sdk::Result* mutable_result();
  void set_allocated_result(::insider::sdk::Result* result);
  private:
  const ::insider::sdk::Result& _internal_result() const;
  ::insider::sdk::Result* _internal_mutable_result();
  public:

  // int32 res = 1;
  void clear_res();
  ::PROTOBUF_NAMESPACE_ID::int32 res() const;
  void set_res(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res() const;
  void _internal_set_res(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:insider.sdk.Footer)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::insider::sdk::Result* result_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_in_5fsdk_5ffooter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SdkResult

// .insider.sdk.ResponseResult status_code = 1;
inline void SdkResult::clear_status_code() {
  status_code_ = 0;
}
inline ::insider::sdk::ResponseResult SdkResult::_internal_status_code() const {
  return static_cast< ::insider::sdk::ResponseResult >(status_code_);
}
inline ::insider::sdk::ResponseResult SdkResult::status_code() const {
  // @@protoc_insertion_point(field_get:insider.sdk.SdkResult.status_code)
  return _internal_status_code();
}
inline void SdkResult::_internal_set_status_code(::insider::sdk::ResponseResult value) {
  
  status_code_ = value;
}
inline void SdkResult::set_status_code(::insider::sdk::ResponseResult value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:insider.sdk.SdkResult.status_code)
}

// string code = 2;
inline void SdkResult::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SdkResult::code() const {
  // @@protoc_insertion_point(field_get:insider.sdk.SdkResult.code)
  return _internal_code();
}
inline void SdkResult::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:insider.sdk.SdkResult.code)
}
inline std::string* SdkResult::mutable_code() {
  // @@protoc_insertion_point(field_mutable:insider.sdk.SdkResult.code)
  return _internal_mutable_code();
}
inline const std::string& SdkResult::_internal_code() const {
  return code_.GetNoArena();
}
inline void SdkResult::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SdkResult::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:insider.sdk.SdkResult.code)
}
inline void SdkResult::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:insider.sdk.SdkResult.code)
}
inline void SdkResult::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:insider.sdk.SdkResult.code)
}
inline std::string* SdkResult::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SdkResult::release_code() {
  // @@protoc_insertion_point(field_release:insider.sdk.SdkResult.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SdkResult::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:insider.sdk.SdkResult.code)
}

// -------------------------------------------------------------------

// ContentResult

// .insider.sdk.ContentResultE status_code = 1;
inline void ContentResult::clear_status_code() {
  status_code_ = 0;
}
inline ::insider::sdk::ContentResultE ContentResult::_internal_status_code() const {
  return static_cast< ::insider::sdk::ContentResultE >(status_code_);
}
inline ::insider::sdk::ContentResultE ContentResult::status_code() const {
  // @@protoc_insertion_point(field_get:insider.sdk.ContentResult.status_code)
  return _internal_status_code();
}
inline void ContentResult::_internal_set_status_code(::insider::sdk::ContentResultE value) {
  
  status_code_ = value;
}
inline void ContentResult::set_status_code(::insider::sdk::ContentResultE value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:insider.sdk.ContentResult.status_code)
}

// string code = 2;
inline void ContentResult::clear_code() {
  code_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ContentResult::code() const {
  // @@protoc_insertion_point(field_get:insider.sdk.ContentResult.code)
  return _internal_code();
}
inline void ContentResult::set_code(const std::string& value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:insider.sdk.ContentResult.code)
}
inline std::string* ContentResult::mutable_code() {
  // @@protoc_insertion_point(field_mutable:insider.sdk.ContentResult.code)
  return _internal_mutable_code();
}
inline const std::string& ContentResult::_internal_code() const {
  return code_.GetNoArena();
}
inline void ContentResult::_internal_set_code(const std::string& value) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ContentResult::set_code(std::string&& value) {
  
  code_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:insider.sdk.ContentResult.code)
}
inline void ContentResult::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:insider.sdk.ContentResult.code)
}
inline void ContentResult::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:insider.sdk.ContentResult.code)
}
inline std::string* ContentResult::_internal_mutable_code() {
  
  return code_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ContentResult::release_code() {
  // @@protoc_insertion_point(field_release:insider.sdk.ContentResult.code)
  
  return code_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ContentResult::set_allocated_code(std::string* code) {
  if (code != nullptr) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:insider.sdk.ContentResult.code)
}

// -------------------------------------------------------------------

// Result

// .insider.sdk.SdkResult sdk_result = 1;
inline bool Result::_internal_has_sdk_result() const {
  return this != internal_default_instance() && sdk_result_ != nullptr;
}
inline bool Result::has_sdk_result() const {
  return _internal_has_sdk_result();
}
inline void Result::clear_sdk_result() {
  if (GetArenaNoVirtual() == nullptr && sdk_result_ != nullptr) {
    delete sdk_result_;
  }
  sdk_result_ = nullptr;
}
inline const ::insider::sdk::SdkResult& Result::_internal_sdk_result() const {
  const ::insider::sdk::SdkResult* p = sdk_result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::insider::sdk::SdkResult*>(
      &::insider::sdk::_SdkResult_default_instance_);
}
inline const ::insider::sdk::SdkResult& Result::sdk_result() const {
  // @@protoc_insertion_point(field_get:insider.sdk.Result.sdk_result)
  return _internal_sdk_result();
}
inline ::insider::sdk::SdkResult* Result::release_sdk_result() {
  // @@protoc_insertion_point(field_release:insider.sdk.Result.sdk_result)
  
  ::insider::sdk::SdkResult* temp = sdk_result_;
  sdk_result_ = nullptr;
  return temp;
}
inline ::insider::sdk::SdkResult* Result::_internal_mutable_sdk_result() {
  
  if (sdk_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::insider::sdk::SdkResult>(GetArenaNoVirtual());
    sdk_result_ = p;
  }
  return sdk_result_;
}
inline ::insider::sdk::SdkResult* Result::mutable_sdk_result() {
  // @@protoc_insertion_point(field_mutable:insider.sdk.Result.sdk_result)
  return _internal_mutable_sdk_result();
}
inline void Result::set_allocated_sdk_result(::insider::sdk::SdkResult* sdk_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete sdk_result_;
  }
  if (sdk_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sdk_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sdk_result, submessage_arena);
    }
    
  } else {
    
  }
  sdk_result_ = sdk_result;
  // @@protoc_insertion_point(field_set_allocated:insider.sdk.Result.sdk_result)
}

// .insider.sdk.ContentResult content_result = 2;
inline bool Result::_internal_has_content_result() const {
  return this != internal_default_instance() && content_result_ != nullptr;
}
inline bool Result::has_content_result() const {
  return _internal_has_content_result();
}
inline void Result::clear_content_result() {
  if (GetArenaNoVirtual() == nullptr && content_result_ != nullptr) {
    delete content_result_;
  }
  content_result_ = nullptr;
}
inline const ::insider::sdk::ContentResult& Result::_internal_content_result() const {
  const ::insider::sdk::ContentResult* p = content_result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::insider::sdk::ContentResult*>(
      &::insider::sdk::_ContentResult_default_instance_);
}
inline const ::insider::sdk::ContentResult& Result::content_result() const {
  // @@protoc_insertion_point(field_get:insider.sdk.Result.content_result)
  return _internal_content_result();
}
inline ::insider::sdk::ContentResult* Result::release_content_result() {
  // @@protoc_insertion_point(field_release:insider.sdk.Result.content_result)
  
  ::insider::sdk::ContentResult* temp = content_result_;
  content_result_ = nullptr;
  return temp;
}
inline ::insider::sdk::ContentResult* Result::_internal_mutable_content_result() {
  
  if (content_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::insider::sdk::ContentResult>(GetArenaNoVirtual());
    content_result_ = p;
  }
  return content_result_;
}
inline ::insider::sdk::ContentResult* Result::mutable_content_result() {
  // @@protoc_insertion_point(field_mutable:insider.sdk.Result.content_result)
  return _internal_mutable_content_result();
}
inline void Result::set_allocated_content_result(::insider::sdk::ContentResult* content_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete content_result_;
  }
  if (content_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      content_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content_result, submessage_arena);
    }
    
  } else {
    
  }
  content_result_ = content_result;
  // @@protoc_insertion_point(field_set_allocated:insider.sdk.Result.content_result)
}

// -------------------------------------------------------------------

// Footer

// int32 res = 1;
inline void Footer::clear_res() {
  res_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Footer::_internal_res() const {
  return res_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Footer::res() const {
  // @@protoc_insertion_point(field_get:insider.sdk.Footer.res)
  return _internal_res();
}
inline void Footer::_internal_set_res(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_ = value;
}
inline void Footer::set_res(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res(value);
  // @@protoc_insertion_point(field_set:insider.sdk.Footer.res)
}

// .insider.sdk.Result result = 2;
inline bool Footer::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool Footer::has_result() const {
  return _internal_has_result();
}
inline void Footer::clear_result() {
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::insider::sdk::Result& Footer::_internal_result() const {
  const ::insider::sdk::Result* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::insider::sdk::Result*>(
      &::insider::sdk::_Result_default_instance_);
}
inline const ::insider::sdk::Result& Footer::result() const {
  // @@protoc_insertion_point(field_get:insider.sdk.Footer.result)
  return _internal_result();
}
inline ::insider::sdk::Result* Footer::release_result() {
  // @@protoc_insertion_point(field_release:insider.sdk.Footer.result)
  
  ::insider::sdk::Result* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::insider::sdk::Result* Footer::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::insider::sdk::Result>(GetArenaNoVirtual());
    result_ = p;
  }
  return result_;
}
inline ::insider::sdk::Result* Footer::mutable_result() {
  // @@protoc_insertion_point(field_mutable:insider.sdk.Footer.result)
  return _internal_mutable_result();
}
inline void Footer::set_allocated_result(::insider::sdk::Result* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:insider.sdk.Footer.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sdk
}  // namespace insider

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::insider::sdk::ContentResultE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::insider::sdk::ContentResultE>() {
  return ::insider::sdk::ContentResultE_descriptor();
}
template <> struct is_proto_enum< ::insider::sdk::ResponseResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::insider::sdk::ResponseResult>() {
  return ::insider::sdk::ResponseResult_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_in_5fsdk_5ffooter_2eproto
